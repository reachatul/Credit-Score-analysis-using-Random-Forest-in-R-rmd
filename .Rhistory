setwd("C:/Users/Atul/Desktop/risk analysis")
train1 <- read.csv("cs-training.csv")
test1 <- read.csv("cs-test.csv")
nrow(test1)
nrow(train1)
setwd("C:/Users/Atul/Desktop/risk analysis")
train1 <- read.csv("cs-training.csv")
test1 <- read.csv("cs-test.csv")
head(test1)
head(train1)
combi <- rbind(train1,test1)
str(combi)
summary(combi)
combi <- rbind(train1,test1)
str(combi)
summary(combi)
library(Party)
library("Party")
install.packages("party")
setwd("C:/Users/Atul/Desktop/risk analysis")
train1 <- read.csv("cs-training.csv")
test1 <- read.csv("cs-test.csv")
nrow(test1)
nrow(train1)
#View(train)
#View(test)
combi <- rbind(train1,test1)
#Now its time to look closely at the data and to decide what else is required.
str(combi)
summary(combi)
library("Party")
#After looking at the summary and going through the data dictionary (xls file)
#it is clear that the model requires more categorical data to make better sense of it.
library(rpart)
combi$AgeClass <- '64+'
combi$AgeClass[combi$age > 0 & combi$age <= 40] <- '0-40'
combi$AgeClass[combi$age > 40 & combi$age <=52] <- '41-52'
combi$AgeClass[combi$age > 52 & combi$age <=64] <- '43-54'
combi$AgeClass <- as.factor(combi$AgeClass)
#combi$AgeClass[is.na(combi$age)] <- NA
library(gmodels)
CrossTable(combi$SeriousDlqin2yrs)
#This function gave me the analysis of the variable to be predicted,
#A stagerring 93.3 % of people did not have deliquencies post 90 days.
#This would mean if I were to predict the test data as 0 for all people,
#I would be right with 93% of them.
#lets test the respose with the remaining variables.
CrossTable(combi$SeriousDlqin2yrs,combi$AgeClass, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
# Well this makes sense, the output clearly shows that 36.2% of serious deliquencies and 34.3% of serious deliquencies
# are done by people of the age groups of 0-40 and 41-52 respectively. And the rest aren't as significant.
#This makes sense, because this is the age where people go though serious life turnouts, it is around the age where people eitherlose their loved ones, or sickness entraps them,
#while their young ones are making a career or getting married. Lets make some more categorical data from the rest of the features
DependentsFit <- rpart(NumberOfDependents ~ RevolvingUtilizationOfUnsecuredLines + age + NumberOfOpenCreditLinesAndLoans
+ MonthlyIncome + NumberRealEstateLoansOrLines + DebtRatio,
data=combi[!is.na(combi$NumberOfDependents),],
method="anova")
combi$NumberOfDependents[is.na(combi$NumberOfDependents)] <- predict(DependentsFit, combi[is.na(combi$NumberOfDependents),])
sum(is.na(combi$NumberOfDependents))
# combi$NumberOfDependents <- as.factor(combi$NumberOfDependents)
# levels(combi$NumberOfDependents) <- c("0", "1", "2", "3",  "4-5", "4-5","6-10","6-10","6-10","6-10","6-10" , "10+","10+")
# CrossTable(combi$NumberOfDependents)
# CrossTable(combi$SeriousDlqin2yrs,combi$NumberOfDependents, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#
#Well this seems controversial, the number of people who do not have nay dependents seem to constitute 51.7%
#of the total deliquencies, that would not make sense, but theres a catch, the deliquencies are much lesser than their total composition of the people with 0 dependants which is 59.5%
#whereas the percentage of deliquencies in greater than their composition as the number of dependencies start increasing.
#Lets now look at another predictor vatible, lets look at the number of times people were lateb by 30-59 dats,
#lets change the datatype of the variable from integer to factor and change the levels.
combi$NumberOfTime30.59DaysPastDueNotWorse <- as.factor(combi$NumberOfTime30.59DaysPastDueNotWorse)
CrossTable(combi$SeriousDlqin2yrs,combi$NumberOfTime30.59DaysPastDueNotWorse, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#Lets apply the same the numberoftimepast 60-89 days column.
combi$NumberOfTime60.89DaysPastDueNotWorse <- as.factor(combi$NumberOfTime60.89DaysPastDueNotWorse)
CrossTable(combi$SeriousDlqin2yrs,combi$NumberOfTime60.89DaysPastDueNotWorse, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#Number of times 90 days late.
combi$NumberOfTimes90DaysLate <- as.factor(combi$NumberOfTimes90DaysLate)
CrossTable(combi$SeriousDlqin2yrs,combi$NumberOfTimes90DaysLate, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#Filling the NAs in monthly income using regression anova method.
IncomeFit <- rpart(MonthlyIncome ~ RevolvingUtilizationOfUnsecuredLines + age + NumberOfOpenCreditLinesAndLoans + NumberOfDependents + NumberRealEstateLoansOrLines + DebtRatio,
data=combi[!is.na(combi$MonthlyIncome),],
method="anova")
combi$MonthlyIncome[is.na(combi$MonthlyIncome)] <- predict(IncomeFit, combi[is.na(combi$MonthlyIncome),])
sum(is.na(combi$MonthlyIncome))
#Viola
#Lets now go to the salary data and create categorical variables for the salary data
combi$IncomeClass[combi$MonthlyIncome >= 0 & combi$MonthlyIncome <= 1000] <- '0-1000'
combi$IncomeClass[combi$MonthlyIncome > 1000 & combi$MonthlyIncome <= 2000] <- '1001-2000'
combi$IncomeClass[combi$MonthlyIncome > 2000 & combi$MonthlyIncome <= 3000] <- '2001-3000'
combi$IncomeClass[combi$MonthlyIncome > 3000 & combi$MonthlyIncome <= 4000] <- '3001-4000'
combi$IncomeClass[combi$MonthlyIncome > 4000 & combi$MonthlyIncome <= 6000] <- '4001-6000'
combi$IncomeClass[combi$MonthlyIncome > 6001 & combi$MonthlyIncome <= 8000] <- '6001-8000'
combi$IncomeClass[combi$MonthlyIncome > 6000 & combi$MonthlyIncome <= 10000] <- '8001-10000'
combi$IncomeClass[combi$MonthlyIncome > 10000 & combi$MonthlyIncome <= 20000] <- '10001-20000'
combi$IncomeClass[combi$MonthlyIncome > 20000] <- '20000+'
combi$IncomeClass <- as.factor(combi$IncomeClass)
#One of the most insightful variable in my opinion is the debt ratrio, this has to make a lo0t of sense once we model the Cross Table of Debt Ratio\
combi$DebtRatioClass <- '100+'
combi$DebtRatioClass[combi$DebtRatio >= 0 & combi$DebtRatio <= 0.5] <- '0-0.5'
combi$DebtRatioClass[combi$DebtRatio > 0.5 & combi$DebtRatio <= 1] <- '0.5-1'
combi$DebtRatioClass[combi$DebtRatio > 1 & combi$DebtRatio <= 2] <- '1-2'
combi$DebtRatioClass[combi$DebtRatio > 2 & combi$DebtRatio <= 10] <- '2-10'
combi$DebtRatioClass[combi$DebtRatio > 10 & combi$DebtRatio <= 100] <- '10-100'
combi$DebtRatioClass <- as.factor(combi$DebtRatioClass)
summary(combi$DebtRatioClass)
CrossTable(combi$DebtRatioClass)
CrossTable(combi$SeriousDlqin2yrs,combi$DebtRatioClass, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#As can be seen using the comparison, this makes perfect sense..
#the next feature of the dataset to be consideredq, is the RevolvingUtilizationOfUnsecuredLine, this should be on the same lines of that of debt ratio
summary(combi$RevolvingUtilizationOfUnsecuredLines)
combi$RUUCCLass <- '100+'
combi$RUUCCLass[combi$RevolvingUtilizationOfUnsecuredLines >= 0 & combi$RevolvingUtilizationOfUnsecuredLines <= 0.15] <- '0-0.15'
combi$RUUCCLass[combi$RevolvingUtilizationOfUnsecuredLines > 0.15 & combi$RevolvingUtilizationOfUnsecuredLines <= 0.5] <- '0.15-0.5'
combi$RUUCCLass[combi$RevolvingUtilizationOfUnsecuredLines > 0.5 & combi$RevolvingUtilizationOfUnsecuredLines <= 1] <- '0.5-1'
combi$RUUCCLass[combi$RevolvingUtilizationOfUnsecuredLines > 1 & combi$RevolvingUtilizationOfUnsecuredLines <= 10] <- '1-10'
combi$RUUCCLass[combi$RevolvingUtilizationOfUnsecuredLines > 10 & combi$RevolvingUtilizationOfUnsecuredLines <= 100] <- '10-100'
combi$RUUCCLass[is.na(combi$RevolvingUtilizationOfUnsecuredLines)] <- NA
combi$RUUCCLass <- as.factor(combi$RUUCCLass)
sum(is.na(combi$RevolvingUtilizationOfUnsecuredLines))
CrossTable(combi$RUUCCLass)
CrossTable(combi$SeriousDlqin2yrs,combi$RUUCCLass, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#As predicted, the RevolvingUtilizationOfUnsecuredLines is on the similar lines of that of the debt ratio.
#Lets go ahead to the number of opern credits and lines laon, one can predict that less are the number of open credit lines, less are the chances of person to default the loan
#But that would be awrong assertion, gien we fdon't know how much he/she is earning and how much is the loan.
summary(combi$NumberOfOpenCreditLinesAndLoans)
plot(density(combi$NumberOfOpenCreditLinesAndLoans))
#Let us model categorically for this variable
combi$OpenCreditClass <- '20+'
combi$OpenCreditClass[combi$NumberOfOpenCreditLinesAndLoans >= 0 & combi$NumberOfOpenCreditLinesAndLoans<=5] <- '0-5'
combi$OpenCreditClass[combi$NumberOfOpenCreditLinesAndLoans > 5 & combi$NumberOfOpenCreditLinesAndLoans<=10] <- '5-10'
combi$OpenCreditClass[combi$NumberOfOpenCreditLinesAndLoans > 10 & combi$NumberOfOpenCreditLinesAndLoans<=15] <- '10-15'
combi$OpenCreditClass[combi$NumberOfOpenCreditLinesAndLoans > 15 & combi$NumberOfOpenCreditLinesAndLoans<= 20] <- '15-20'
combi$OpenCreditClass <- as.factor(combi$OpenCreditClass)
CrossTable(combi$OpenCreditClass)
CrossTable(combi$SeriousDlqin2yrs,combi$OpenCreditClass, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
#independently, this variable does not seem as insightful as other, but i am certain collectively it will be very important.
summary(combi$NumberRealEstateLoansOrLines)
combi$RealtyLinesClass <- '3+'
combi$RealtyLinesClass[combi$NumberRealEstateLoansOrLines >=0 & combi$NumberRealEstateLoansOrLines <= 1] <- '0-1'
combi$RealtyLinesClass[combi$NumberRealEstateLoansOrLines >1 & combi$NumberRealEstateLoansOrLines <= 2] <- '1-2'
combi$RealtyLinesClass[combi$NumberRealEstateLoansOrLines >2 & combi$NumberRealEstateLoansOrLines <= 3] <- '2-3'
combi$RealtyLinesClass <- as.factor(combi$RealtyLinesClass)
CrossTable(combi$RealtyLinesClass)
CrossTable(combi$SeriousDlqin2yrs,combi$RealtyLinesClass, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE)
str(combi)
#install.packages('randomForest')
library(randomForest)
set.seed(888)
nrow(combi)
train <- combi[1:150000,]
test <- combi[150001:251503,]
#I used randomFOrest algorithm(my favourite) to get the probability, I did not use a lot of paprameter tuning.
fit <- randomForest(as.factor(SeriousDlqin2yrs) ~ NumberOfTimes90DaysLate + NumberOfTime60.89DaysPastDueNotWorse
+ NumberOfTime30.59DaysPastDueNotWorse + NumberOfDependents + AgeClass + DebtRatioClass +
RUUCCLass + OpenCreditClass + RealtyLinesClass,
data=train,
importance=TRUE,
ntree=25, keep.forest = TRUE)
sum(is.na(train$SeriousDlqin2yrs))
Prediction <- predict(fit, test, type = "prob")
submit <- data.frame(Id = test$X, Probability = Prediction)
entry <- data.frame(Id = submit$Id, Probability = submit$Probability.1)
write.csv(entry, file = "Entry.csv", row.names = FALSE)
nrow(test)
ctree <- ctree(as.factor(SeriousDlqin2yrs) ~ NumberOfTimes90DaysLate + NumberOfTime60.89DaysPastDueNotWorse
+ NumberOfTime30.59DaysPastDueNotWorse + NumberOfDependents + AgeClass + DebtRatioClass +
RUUCCLass + OpenCreditClass + RealtyLinesClass,
data=train,
importance=TRUE,
ntree=25, keep.forest = TRUE)
plot(ctree, type="simple")
library("party")
ctree <- ctree(as.factor(SeriousDlqin2yrs) ~ NumberOfTimes90DaysLate + NumberOfTime60.89DaysPastDueNotWorse
+ NumberOfTime30.59DaysPastDueNotWorse + NumberOfDependents + AgeClass + DebtRatioClass +
RUUCCLass + OpenCreditClass + RealtyLinesClass,
data=train,
importance=TRUE,
ntree=25, keep.forest = TRUE)
plot(ctree, type="simple")
x <- ctree(as.factor(SeriousDlqin2yrs) ~ NumberOfTimes90DaysLate + NumberOfTime60.89DaysPastDueNotWorse
+ NumberOfTime30.59DaysPastDueNotWorse + NumberOfDependents + AgeClass + DebtRatioClass +
RUUCCLass + OpenCreditClass + RealtyLinesClass,
data=train)
plot(x, type="simple")
install.packages("partykit")
library("partykit")
x <- ctree(as.factor(SeriousDlqin2yrs) ~ NumberOfTimes90DaysLate + NumberOfTime60.89DaysPastDueNotWorse
+ NumberOfTime30.59DaysPastDueNotWorse + NumberOfDependents + AgeClass + DebtRatioClass +
RUUCCLass + OpenCreditClass + RealtyLinesClass,
data=train)
plot(x, gp = gpar(fontsize = 6),     # font size changed to 6
inner_panel=node_inner,
ip_args=list(
abbreviate = TRUE,
id = FALSE)
)
plot(x, gp = gpar(fontsize = 4),     # font size changed to 6
inner_panel=node_inner,
ip_args=list(
abbreviate = FALSE,
id = FALSE)
)
plot(x, gp = gpar(fontsize = 5),     # font size changed to 6
inner_panel=node_inner,
ip_args=list(
abbreviate = FALSE,
id = FALSE)
)
